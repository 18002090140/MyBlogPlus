<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pzhu.myblog.project.system.mapper.SysNoticeMapper">
  <resultMap id="BaseResultMap" type="com.pzhu.myblog.project.system.domain.SysNotice">
    <!--@mbg.generated-->
    <!--@Table sys_notice-->
    <id column="notice_id" jdbcType="INTEGER" property="noticeId" />
    <result column="notice_title" jdbcType="VARCHAR" property="noticeTitle" />
    <result column="notice_type" jdbcType="CHAR" property="noticeType" />
    <result column="notice_content" jdbcType="VARCHAR" property="noticeContent" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    notice_id, notice_title, notice_type, notice_content, `status`, create_by, create_time,
    update_by, update_time, remark
  </sql>

  <sql id="selectNoticeVo">
        select notice_id, notice_title,  CASE notice_type
      WHEN '1' THEN '通知'
      WHEN '2' THEN '公告'
      END AS notice_type, notice_content, CASE status
      WHEN '0' THEN '正常'
      WHEN '1' THEN '关闭'
      END AS status, create_by, create_time, update_by, update_time, remark
		from sys_notice
    </sql>

  <select id="selectNoticeById" resultType="com.pzhu.myblog.project.system.domain.SysNotice">
    <include refid="selectNoticeVo"/>
    where notice_id = #{noticeId}
  </select>

  <select id="selectNoticeList" resultType="com.pzhu.myblog.project.system.domain.SysNotice">
    <include refid="selectNoticeVo"/>
  </select>

  <insert id="insertNotice" >
    insert into sys_notice (
    <if test="noticeTitle != null and noticeTitle != '' ">notice_title, </if>
    <if test="noticeType != null and noticeType != '' ">notice_type, </if>
    <if test="noticeContent != null and noticeContent != '' ">notice_content, </if>
    <if test="status != null and status != '' ">status, </if>
    <if test="remark != null and remark != ''">remark,</if>
    <if test="createBy != null and createBy != ''">create_by,</if>
    create_time
    )values(
    <if test="noticeTitle != null and noticeTitle != ''">#{noticeTitle}, </if>
    <if test="noticeType != null and noticeType != ''">#{noticeType}, </if>
    <if test="noticeContent != null and noticeContent != ''">#{noticeContent}, </if>
    <if test="status != null and status != ''">#{status}, </if>
    <if test="remark != null and remark != ''">#{remark},</if>
    <if test="createBy != null and createBy != ''">#{createBy},</if>
    sysdate()
    )
  </insert>

  <update id="updateNotice" >
    update sys_notice
    <set>
      <if test="noticeTitle != null and noticeTitle != ''">notice_title = #{noticeTitle}, </if>
      <if test="noticeType != null and noticeType != ''">notice_type = #{noticeType}, </if>
      <if test="noticeContent != null">notice_content = #{noticeContent}, </if>
      <if test="status != null and status != ''">status = #{status}, </if>
      <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
      update_time = sysdate()
    </set>
    where notice_id = #{noticeId}
  </update>

  <delete id="deleteNoticeById" parameterType="Long">
    delete from sys_notice where notice_id = #{noticeId}
  </delete>

  <delete id="deleteNoticeByIds" parameterType="Long">
    delete from sys_notice where notice_id in
    <foreach item="noticeId" collection="list" open="(" separator="," close=")">
      #{noticeId}
    </foreach>
  </delete>
</mapper>
